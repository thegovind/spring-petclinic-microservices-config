# COMMON APPLICATION PROPERTIES

server:
  # start services on random port by default
  port: 0
  # The stop processing uses a timeout which provides a grace period during which existing requests will be allowed to complete but no new requests will be permitted
  shutdown: graceful

# embedded database init, supports mysql too trough the 'mysql' spring profile
spring:
  datasource:
    schema: classpath*:db/hsqldb/schema.sql
    data: classpath*:db/hsqldb/data.sql
  sleuth:
    sampler:
      probability: 1.0
  cloud:
    config:
      # Allow the microservices to override the remote properties with their own System properties or config file
      allow-override: true
      # Override configuration with any local property source
      override-none: true
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none

#  Spring Boot 1.5 makes actuator secure by default
management.security.enabled: false
# Enable all Actuators and not only the two available by default /health and /info starting Spring Boot 2.0
management.endpoints.web.exposure.include: "*"

# Temporary hack required by the Spring Boot 2 / Spring Cloud Finchley branch
# Waiting issue https://github.com/spring-projects/spring-boot/issues/13042
spring.cloud.refresh.refreshable: false


# Logging
logging.level.org.springframework: INFO

# Metrics
management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  metrics:
    export:
      prometheus:
        enabled: true

# Chaos Engineering
---
spring:
  config:
    activate:
      on-profile: chaos-monkey      
management.endpoint.chaosmonkey.enabled: true
chaos:
  monkey:
    enabled: true
    watcher:
      component: false
      controller: false
      repository: false
      rest-controller: false
      service: false

---
spring:
  config:
    activate:
      on-profile: mysql
  jms:
    servicebus:
      # connection-string: ${spring.jms.servicebus.connection-string}
      connection-string: Endpoint=sb://springappsns51d4bd.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=51ezFkz/tAOJH/L2WrQBxthxh6TfGOcoASv+kUdoZfk=
      idle-timeout: 60000
      pricing-tier: premium
  datasource:
    schema: classpath*:db/mysql/schema.sql
    data: classpath*:db/mysql/data.sql
    url: jdbc:mysql://springappsmysql51d4bd.mysql.database.azure.com:3306/petclinic?useSSL=true
    # username: myadmin@springappsmysql51d4bd
    # password: CEVtNdBw25TtuuqV1N
    initialization-mode: ALWAYS
  kafka:
    bootstrap-servers: springappseh51d4bd.servicebus.windows.net:9093
    client-id: first-service
    group-id: $Default
    properties:
      # sasl.jaas.config: 
      sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="Endpoint=sb://springappseh51d4bd.servicebus.windows.net/;SharedAccessKeyName=listensendrule;SharedAccessKey=jJdpf+ALTlsRjIz5IVuKAT7tq831NLYbnUSuubAfH9k=";
      sasl.mechanism: PLAIN
      security.protocol: SASL_SSL
      spring.json:
        use.type.headers: false
        value.default.type: com.targa.labs.dev.telemetrystation.Message
  cloud:
    azure:
      keyvault:
        secret:
          property-source-enabled: true
          property-sources:
            - name: key-vault-property-source-1
              endpoint: https://springappskv51d4bd.vault.azure.net/
              credential.managed-identity-enabled: true
